<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.itcast.microservice.order</groupId>
  <artifactId>itcast-microservice-order</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>1.5.4.RELEASE</version>
  </parent>
  
  <!-- 导入Spring Cloud的依赖管理 -->
  <dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-dependencies</artifactId>
			<version>Dalston.SR3</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
	</dependencies>
  </dependencyManagement>
  
  <dependencies>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
	</dependency>
	<dependency>
		<groupId>com.squareup.okhttp3</groupId>
		<artifactId>okhttp</artifactId>
		<!-- <version>3.9.0</version> --><!-- spring-cloud-dependencies依赖中包含了okhtto3的版本号 -->
	</dependency>
	<!-- 导入Eureka服务的依赖 -->
	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-eureka-server</artifactId>
		<exclusions>
			<!-- 由于我们引入了eurekaserver的依赖，导致破坏了之前SpringMVC默认的配置，从而导致了响应成了xml -->
			<!-- 解决方法：排除eurekaserver中的xml依赖，如下： -->
			<exclusion>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-xml</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	
	<!-- 增加ribbon依赖 -->
	<!-- 其实，该依赖是可以省略的，因为>spring-cloud-starter-eureka-server中已经包含了spring-cloud-starter-ribbon -->
	<!-- <dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-ribbon</artifactId>
	</dependency> -->
	
	<!-- 引入SpringBoot的单元测试 -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
	</dependency>
	
	<!-- 增加hystrix依赖 -->
	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-hystrix</artifactId>
	</dependency>
	
	<!-- 导入feign的依赖  作用：更便捷、更优雅的调用HTTP API-->
	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-feign</artifactId>
	</dependency>
  </dependencies>

  <build>
	<finalName>${project.artifactId}</finalName>
	<plugins>
		<!-- 资源文件拷贝插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<configuration>
				<encoding>UTF-8</encoding>
			</configuration>
		</plugin>
		<!-- java编译插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
				<encoding>UTF-8</encoding>
			</configuration>
		</plugin>
	</plugins>
  </build>
</project>